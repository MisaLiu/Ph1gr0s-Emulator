@support-backdrop-filter: ~"(not (backdrop-filter: blur(1px))) and (not (-webkit-backdrop-filter: blur(1px)))";

:root {
    --line-scale: 76.8;
}

/* 定义通用 transition 属性 */
.transition-default() {
    transition-property: left, right, color, background, transform, -webkit-transform, opacity;
    transition-duration: 0.5s;
    transition-timing-function: cubic-bezier(0, 0, 0, 1);
}

/* 定义需要进行最大化兼容的 css 属性为函数 */
.transform(@value) {
            transform: @value;
        -ms-transform: @value;
    -webkit-transform: @value;
}
.transition(@value) {
            transition: @value;
        -ms-transition: @value;
       -moz-transition: @value;
    -webkit-transition: @value;
}
.backdropFilter(@value) {
            backdrop-filter: @value;
    -webkit-backdrop-filter: @value;
}

/* 定义需要频繁使用的方法 */
.heightPercent(@pixel: 10px) {
    @result: calc(var(--height-percent) * @pixel);
}
.lineScale(@pixel: 0.5px) {
    @result: calc(var(--line-scale) * @pixel);
}

/* ================================= 原生组件定义区 ================================= */
/**
 * 此处定义原生组件的样式，如 body, button 等组件的样式
**/
html, body {
    margin: 0;
    padding: 0;
    height: 100%;
    color: #FFF;
    background-color: #000;
    overflow: hidden;
}

button {
    padding: .lineScale(0.3125px)[] .lineScale(0.694444px)[];
    color: #FFF;
    background: none;
    font-size: .lineScale(0.347222px)[];
    border: .lineScale(0.034722px)[] solid #FFF;
    outline: none;
    border-radius: .lineScale(0.555556px)[];
    transition-property: background, color, border;
    transition-duration: 0.2s;
    transition-timing-function: linear;
    -webkit-transition-property: background, color, border;
    -webkit-transition-duration: 0.2s;
    -webkit-transition-timing-function: linear;
    cursor: pointer;
    box-sizing: border-box;

    &:hover {
        background: rgba(255, 255, 255, 0.2);
    }

    &:active {
        color: rgba(255, 255, 255, 0.6);
        background: rgba(255, 255, 255, 0.1);
        border-color: rgba(255, 255, 255, 0.6);
    }

    &.highlight {
        background: #FFF;
        color: #000;
        border: .lineScale(0.034722px)[] solid rgba(255, 255, 255, 0);

        &:hover {
            background: rgba(255, 255, 255, 0.8);
            border: .lineScale(0.034722px)[] solid #FFF;
        }

        &:active {
            background: rgba(255, 255, 255, 0.6);
        }
    }
}

/* ================================= 自定义样式定义区 ================================= */
/**
 * 此处定义通用样式，如定义一次之后就可以在其他组件中使用的样式
**/
.center {
    position: absolute !important;
    top: 50%;
    left: 50%;
    .transform(translate(-50%, -50%));
}

.game-screen {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: #000;
    background-size: cover;
    background-repeat: no-repeat;
    background-position: center;
}

.container {
    display: flex;
    position: absolute;
    top: 50%;
    left: 50%;
    width: .lineScale(0.828645px)[];
    height: 77.129630%;
    transform: translate(-50%, -50%);
    background: rgba(255, 255, 255, 0.2);
    border-radius: .lineScale(0.78125px)[];
    flex-direction: row;
    flex-wrap: nowrap;
    justify-content: center;
    align-content: stretch;

    * {
        position: relative;
        padding: .lineScale(0.381944px)[];
        align-self: stretch;
        flex-basis: 100%;
    }

    .content {
        padding-bottom: calc(.lineScale(1.180556px)[] * 2);

        .title {
            margin: .lineScale(0.798611px)[] .lineScale(1.006944px)[] 0;
            font-size: .lineScale(1.006944px)[];
        }

        .subtitle {
            margin: 0 .lineScale(1.180556px)[] 0;
            font-size: .lineScale(0.347222px)[];
        }
    }
}

.loading {
    position: relative;

    &::before {
        content: '';
        display: inline-block;
        position: relative;
        width: .heightPercent(40px)[];
        height: .heightPercent(40px)[];
        border: .heightPercent(6px)[] solid transparent;
        border-top: .heightPercent(6px)[] solid #FFF;
        border-left: .heightPercent(6px)[] solid #FFF;
        border-radius: 50%;
        box-sizing: border-box;
        animation: circle-loading 0.4s linear infinite;
        -webkit-animation: circle-loading 0.4s linear infinite;
    }

    @keyframes circle-loading {
        from { transform: rotate(0deg); }
        to { transform: rotate(360deg); }
    }
    @-webkit-keyframes circle-loading {
        from { transform: rotate(0deg); }
        to { transform: rotate(360deg); }
    }
}



.progress {
    display: block;
    position: absolute;
    left: 0;
    bottom: 0;
    width: 100%;
    height: .heightPercent(13px)[];
    font-size: .lineScale(0.520833px)[];
    .transition-default();

    &::before {
        content: var(--content, '');
        display: inline-block;
        position: absolute;
        top: 0;
        left: 0;
        padding: .heightPercent(7px)[];
        .transform(translateY(-100%));
    }

    &::after {
        content: '';
        display: inline-block;
        position: absolute;
        top: 0;
        left: 0;
        width: var(--progress, 0%);
        height: .heightPercent(13px)[];
        background: rgba(255, 255, 255, .65);
    }
}

.switch {
    display: inline-block;
    cursor: pointer;

    input[type="checkbox"] {
        display: none;
    }

    .switch-background {
        display: inline-block;
        position: relative;
        width: .lineScale(1.267361px)[];
        height: .lineScale(0.520833px)[];
        background: rgba(255, 255, 255, 0.3);
        border-radius: calc(var( --line-scale) * 0.243056px);
        transition-property: background;
        transition-timing-function: ease-out;
        transition-duration: 0.2s;
    }

    .switch-handle {
        display: inline-block;
        position: absolute;
        top: 0;
        left: 0;
        width: .lineScale(0.590278px)[];
        height: .lineScale(0.520833px)[];
        margin: .lineScale(0.086806px)[];
        .transform(translate(0%));
        background: #FFF;
        border-radius: .lineScale(0.15625px)[];
        transition-property: left,transform,-webkit-transform;
        transition-duration: 0.2s;
        transition-timing-function: ease-out;
    }

    /* 定义开关打开后的样式 */
    input[type="checkbox"]:checked {
        & + .switch-background {
            background: rgba(100, 255, 100, 0.3);

            .switch-handle {
                left: 100%;
                .transform(translateX(calc(-100% - .lineScale(0.086806px)[] * 2)));
            }
        }
    }
}

.rks {
    position: relative;
    padding: .heightPercent(6px)[] .heightPercent(13px)[];
    font-size: .lineScale(0.295139px)[];
    font-family: 'MiSans';
    border-radius: .heightPercent(10px)[];
    box-sizing: border-box;

    @alpha: 0.4;

    &::before {
        content: '';
        display: inline-block;
        position: absolute;
        top: 50%;
        left: .heightPercent(6px)[];
        width: .heightPercent(3px)[];
        height: .heightPercent(32px)[];
        .transform(translateY(-50%));
        border-radius: .heightPercent(2px)[];
    }

    .rks-type {
        font-weight: bold;
    }

    &-low {
        background: linear-gradient(120deg, rgba(177, 98, 224, @alpha) -10%, rgba(97, 169, 235, @alpha) 90%, rgba(91, 174, 236, @alpha));

        &::before {
            background: linear-gradient(45deg, #53B4FF, #E9A2F8);
        }
    }

    &-medium {
        background: linear-gradient(110deg, rgba(115, 143, 254, @alpha) 0%, rgba(106, 165, 198, @alpha) 30%, rgba(115, 219, 153, @alpha) 82%, rgba(255, 231, 110, @alpha) 110%, rgba(223, 155, 130, @alpha) 145%);

        &::before {
            background: linear-gradient(160deg, #9ECBE1 0%, #A9A1D4 48%, #6BE9A6 100%);
        }
    }

    &-high {
        background: linear-gradient(136deg, rgba(115, 143, 254, @alpha) 2%, rgba(106, 195, 168, @alpha) 24%, rgba(115, 219, 153, @alpha) 48%, rgba(255, 231, 110, @alpha) 72%, rgba(223, 155, 130, @alpha) 96%);

        &::before {
            background: linear-gradient(175deg, #DF9B82 8%, #FFE76E 22%, #73DB99 42%, #6AA5C6 72%, #738FFE 100%);
        }
    }
}

.level {
    color: #FFF;
    background: #867D62;
    .transition(background .2s linear);

    &-easy {
        background: #24CE63;
    }
    &-hard {
        background: #41BEF3;
    }
    &-insane {
        background: #F3D041;
    }
    &-another {
        background: #F35941;
    }
    &-special {
        background: #0091C7;
    }
    &-legacy {
        background: #867D62;
    }
}

/*
.container .image {
    先留空了
}
*/

.container .image .image-media {
    position: absolute;
    top: 0;
    left: 0;
    width: calc(100% - .lineScale(0.381944px)[] * 2);
    height: calc(100% - .lineScale(0.381944px)[] * 2);
    margin: .lineScale(0.381944px)[];
    background: #000;
    border-radius: .lineScale(0.503472px)[];
}

.container .actions {
    position: absolute;
    width: calc(100% - .lineScale(1.180556px)[] * 2);
    left: 0;
    bottom: 0;
    padding: .lineScale(1.180556px)[];
    padding-top: 0;
}
.container .actions button + button {
    margin-left: .lineScale(0.138889px)[];
}


/**
 * 此处定义非通用样式
**/
.game-loading {
    .bg();
    background-image: url('/img/bg-loading.png');

    .bg() {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-size: cover;
        background-repeat: no-repeat;
        background-position: center;
    }
    .bg-transition() {
        transition-property: opacity;
        transition-timing-function: linear;
        transition-duration: 1s;
    }

    &::before {
        .bg();
        background-image: url('/img/bg-touchtostart.png');
        opacity: 0;
        .bg-transition();
    }

    .logo {
        .bg();
        position: absolute;
        top: .lineScale(0.694444px)[];
        left: .lineScale(-0.416667px)[];
        width: .lineScale(10.381944px)[];
        height: .lineScale(5.850694px)[];
        .transform(translate(0%, 0%));
        background-image: url('/img/bg-logo.png');
    }

    .prompt {
        display: none;
        position: absolute;
        left: 50%;
        bottom: .lineScale(0.954861px)[];
        .transform(translateX(-50%));
        font-size: .lineScale(0.607639px)[];
    }

    &.loaded {
        & {
            cursor: pointer;
        }
        
        &::before {
            opacity: 1;
        }

        .logo {
            top: 50%;
            left: 50%;
            width: .lineScale(19.895833px)[];
            height: .lineScale(11.232639px)[];
            .transform(translate(-50%, -50%));
            transition-property: top, left, width, height, transform, -webkit-transform;
            transition-timing-function: ease-out;
            transition-duration: 1s;
        }

        .progress {
            .transform(translateY(calc(100% + .lineScale(0.520833px)[])));
            opacity: 0;
        }

        .prompt {
            display: inline-block;
        }
    }
}

.select-song {
    background-image: url('/img/bg-touchtostart.png');
    background-size: cover;
    background-repeat: no-repeat;
    background-position: center;
    .transition(background .2s linear);

    &::before {
        content: '';
        display: block;
        position: absolute;
        left: 0;
        bottom: -2px;
        width: 100%;
        height: 2px;
        box-shadow: 0px 0px .heightPercent(250px)[] .heightPercent(150px)[] #000;
        .transition-default();
    }

    .song-list {
        position: absolute;
        width: .heightPercent(607px)[];
        height: .heightPercent(1000px)[];
        top: .heightPercent(40px)[];
        left: .heightPercent(40px)[];
        padding: .heightPercent(46px)[] .heightPercent(44px)[];
        background: rgba(0, 0, 0, .31);
        .backdropFilter(blur(50px));
        overflow: hidden;
        border-radius: .lineScale(0.642361px)[];
        box-sizing: border-box;
        .transition-default();

        /* 针对不支持高斯模糊的浏览器进行兼容样式处理 */
        @supports @support-backdrop-filter {
            background: rgba(0, 0, 0, .91);
        }
    
        .header {
            position: relative;
    
            .title {
                font-size: .lineScale(0.659722px)[];
                font-weight: bold;
            }
    
            .subtitle {
                font-size: .lineScale(0.295139px)[];
            }
    
            .actions {
                position: absolute;
                top: 0;
                right: 0;

                .import-file-input {
                    display: none;
                }
    
                button.import-file {
                    min-width: .heightPercent(134px)[];
                    min-height: .heightPercent(58px)[];
                    padding: .heightPercent(14px)[] .heightPercent(46px)[];
                    background: rgba(0, 0, 0, .38);
                    font-size: .lineScale(0.399306px)[];
                    border: none;
                    border-radius: .lineScale(0.295139px)[];
                }
            }
        }

        .content {
            position: relative;
            height: calc(100% - .heightPercent(126px)[]);
            margin-top: .heightPercent(34px)[];
            border-radius: .lineScale(0.451389px)[];
            overflow-x: hidden;
            overflow-y: auto;
            scroll-behavior: smooth;
            -webkit-overflow-scrolling: touch;
            scroll-snap-type: y mandatory;

            /* 替换默认的滚动条样式 */
            scrollbar-width: thin;
            scrollbar-color: c transparent;

            &::-webkit-scrollbar {
                width: .heightPercent(8px)[];
            }
            &::-webkit-scrollbar-thumb {
                background-color: rgba(255, 255, 255, .5);
            }
            &::-webkit-scrollbar-button, &::-webkit-scrollbar-track {
                display: none;
            }

            &::before, &::after {
                content: var(--content, '已经到头了 >_<||');
                display: block;
                position: relative;
                width: 100%;
                height: 100%;
                color: rgba(255, 255, 255, .5);
                font-size: .lineScale(0.312500px)[];
                line-height: .heightPercent(400px)[];
                text-align: center;
            }

            &.no-items { /* 没有列表项的时候就不显示滚动条 */
                overflow-y: hidden;
            }

            .list-item {
                position: relative;
                padding: .heightPercent(37px)[] 0;
                font-family: 'MiSans';
                scroll-snap-align: start;
                animation: fade-in .2s linear;
                -webkit-animation: fade-in .2s linear;
                cursor: pointer;

                .title {
                    font-size: .lineScale(0.694444px)[];
                    font-weight: bolder;
                }

                .subtitle {
                    font-size: .lineScale(0.347222px)[];
                }
            }
        }
    }

    .selected-song {
        display: flex;
        position: absolute;
        top: .heightPercent(193px)[];
        left: .heightPercent(83px)[];
        width: .heightPercent(720px)[];
        height: .heightPercent(168px)[];
        padding: .heightPercent(15px)[];
        background: rgba(102, 102, 102, .45);
        .backdropFilter(blur(30px));
        border: .heightPercent(1px)[] solid #707070;
        border-radius: .lineScale(0.451389px)[];
        overflow: hidden;
        box-sizing: border-box;
        .transition-default();

        /* 针对不支持高斯模糊的浏览器进行兼容样式处理 */
        @supports @support-backdrop-filter {
            background: rgb(102, 102, 102);
        }

        .song-info {
            padding: .heightPercent(25px)[] .heightPercent(31px)[];
            font-family: 'MiSans';
            flex-grow: 1;

            .title {
                font-size: .lineScale(0.694444px)[];
                font-weight: bold;
            }
            .subtitle {
                font-size: .lineScale(0.347222px)[];
            }
        }

        .song-diff {
            display: flex;
            width: .heightPercent(201px)[];
            height: 100%;
            padding: .heightPercent(25px)[];
            font-family: 'MiSans';
            text-align: center;
            border-radius: .heightPercent(18px)[];
            .transition(background .2s linear);
            box-sizing: border-box;
            flex-direction: column;
            align-items: center;
            flex-wrap: nowrap;

            .diff-value {
                font-size: .lineScale(0.833333px)[];
                font-weight: bold;
            }

            .diff-type {
                font-size: .lineScale(0.3125px)[];
            }
        }
    }

    .song-extra-info {
        position: absolute;
        left: .heightPercent(720px)[];
        bottom: .heightPercent(96px)[];
        padding-left: .heightPercent(16px)[];
        font-family: 'MiSans';
        box-sizing: border-box;
        .transition-default();
        transition-property: left, right, bottom, transform, -webkit-transform, opacity;

        &::before {
            content: '';
            display: inline-block;
            position: absolute;
            left: 0;
            bottom: .heightPercent(5px)[];
            width: .heightPercent(8px)[];
            height: .heightPercent(50px)[];
            background: #FFF;
            border-radius: .heightPercent(6px)[];
        }

        .song-higest-score {
            font-size: .lineScale(0.434028px)[];
        }

        .song-chart-designer {
            font-size: .lineScale(0.347222px)[];
        }
    }

    .user-info {
        display: flex;
        position: absolute;
        top: .heightPercent(65px)[];
        right: .heightPercent(39px)[];
        min-width: .heightPercent(444px)[];
        height: .heightPercent(114px)[];
        padding: .heightPercent(30px)[];
        padding-left: .heightPercent(135px)[];
        background: rgba(0, 0, 0, .31);
        font-family: 'MiSans';
        border-radius: .heightPercent(37px)[];
        .backdropFilter(blur(50px));
        box-sizing: border-box;
        align-items: center;
        flex-wrap: nowrap;
        flex-direction: row;
        justify-content: space-between;
        .transition-default();

        .user-name {
            font-size: .lineScale(0.694444px)[];
            flex-grow: 1;
        }

        .user-rks {
            width: .heightPercent(191px)[];
            margin-left: .heightPercent(10px)[];
        }

        .user-avatar {
            position: absolute;
            top: 50%;
            left: calc(var(--height-percent) * -41px);
            width: .heightPercent(165px)[];
            height: .heightPercent(165px)[];
            .transform(translateY(-50%));
            border-radius: 50%;
        }
    }

    .game-settings {
        position: absolute;
        right: .heightPercent(85px)[];
        bottom: .heightPercent(182px)[];
        height: .heightPercent(57px)[];
        padding: .heightPercent(14px)[] .heightPercent(46px)[];
        font-size: .lineScale(0.35px)[];
        background: rgba(0, 0, 0, .38);
        border: none;
        border-radius: .heightPercent(29px)[];
        .transition-default();
    }

    .song-start {
        position: absolute;
        right: .heightPercent(74px)[];
        bottom: .heightPercent(97px)[];
        height: .heightPercent(73px)[];
        padding: .heightPercent(22px)[] .heightPercent(68px)[];
        font-size: .lineScale(0.35px)[];
        border-radius: .heightPercent(50px)[];
        box-sizing: border-box;
        .transition-default();
    }

    .song-loading-info {
        position: absolute;
        display: flex;
        left: .heightPercent(110px)[];
        bottom: 0;
        .transform(translateY(calc(100% + 2px)));
        font-family: 'MiSans';
        opacity: 0;
        flex-direction: row;
        flex-wrap: nowrap;
        align-items: flex-start;
        .transition-default();

        &::before {
            content: '';
            position: absolute;
            left: 0;
            bottom: 0;
            width: .heightPercent(643px)[];
            height: .heightPercent(76px)[];
            background: rgba(255, 255, 255, 0.2);
            border-radius: .heightPercent(16px)[];
        }

        .diff-info {
            position: relative;
            width: .heightPercent(130px)[];
            height: .heightPercent(112px)[];
            text-align: center;
            border-radius: .heightPercent(16px)[];

            .diff-type {
                padding: .heightPercent(9px)[];
                font-size: .lineScale(0.260417px)[];
            }

            .diff-value {
                position: relative;
                padding: 0 .heightPercent(36px)[] .heightPercent(8px)[];
                font-size: .lineScale(0.868056px)[];
                font-weight: bold;

                &::after {
                    content: '';
                    position: absolute;
                    display: inline-block;
                    top: 0;
                    left: 0;
                    width: 100%;
                    height: 100%;
                    background: rgba(0, 0, 0, 0.05);
                    border-radius: 0 0 .heightPercent(16px)[] .heightPercent(16px)[];
                }
            }
        }

        .song-info {
            margin-left: .heightPercent(27px)[];

            .title {
                font-family: 'A-OTF Shin Go Pr6N H';
                font-size: .lineScale(0.868056px)[];
                line-height: .heightPercent(66px)[];
            }

            .subtitle {
                font-size: .lineScale(0.347222px)[];
            }
        }
    }

    .song-loading-progress {
        .transform(translateY(calc(100% + .lineScale(0.520833px)[])));
        opacity: 0;
    }


    /* 曲目正式加载时，隐藏多余的元素并显示加载进度条 */
    &.song-loading {
        /* 统一定义一下 */
        .hide-left {
            left: 0;
            .transform(translateX(calc(-100% - 2px)));
        }
        .hide-right {
            right: 0;
            .transform(translateX(calc(100% + 2px)));
        }

        .song-list, .selected-song {
            .hide-left();
        }

        .song-extra-info {
            bottom: 0;
            .transform(translateY(calc(100% + 2px)));
        }

        .user-info {
            right: 0;
            .transform(translateX(calc(100% + .heightPercent(41px)[])));
        }

        .song-start, .game-settings {
            .hide-right();
        }

        .song-loading-info {
            bottom: .heightPercent(127px)[];
            .transform(translateY(0));
            opacity: 1;
        }
        
        .song-loading-progress {
            .transform(translateY(0));
            opacity: 1;
        }

        &.song-loaded {
            &::before {
                opacity: 0;
            }

            .song-loading-info {
                bottom: 0;
                .transform(translateY(calc(100% + 2px)));
                opacity: 0;
            }

            .song-loading-progress {
                .transform(translateY(calc(100% + .lineScale(0.520833px)[])));
                opacity: 0;
            }
        }
    }
}